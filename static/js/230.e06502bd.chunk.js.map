{"version":3,"file":"static/js/230.e06502bd.chunk.js","mappings":"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","sources":["hooks/useWindowDimensions.js","webpack://kapusta/./src/components/ChartReport/ChartReport.module.css?4f74","components/ChartReport/ChartReport.js","components/IncomesReport/IncomesReport.styled.js","components/ExpensesReportElement/ExpensesReportElement.styled.js","components/ExpensesReportElement/ExpensesReportElement.jsx","components/ExpensesReport/ExpensesReport.styled.js","components/ExpensesReport/ExpensesReport.jsx","components/IncomesReportElement/IncomesReportElement.styled.js","components/IncomesReportElement/IncomesReportElement.jsx","components/IncomesReport/IncomesReport.jsx","components/ReportByCategories/ReportByCategories.styled.js","components/ReportByCategories/ReportByCategories.jsx","components/TotalTransactionsData/TotalTransactionsData.styled.js","components/TotalTransactionsData/TotalTransactionsData.jsx","pages/ReportsPage/ReportsPage.styled.js","pages/ReportsPage/ReportsPage.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\n\nexport function useWindowDimensions() {\n  const isInBrowserEnvironment = typeof window === 'object';\n\n  const [windowSize, setWindowSize] = useState({\n    width: window.innerWidth,\n    height: window.innerHeight,\n  });\n\n  useEffect(() => {\n    if (!isInBrowserEnvironment) {\n      return false;\n    }\n\n    function getWindowDimensions() {\n      return {\n        width: window.innerWidth,\n        height: window.innerHeight,\n      };\n    }\n    function handleResize() {\n      setWindowSize(getWindowDimensions());\n    }\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, [isInBrowserEnvironment]);\n  return windowSize;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"rechartContainer\":\"ChartReport_rechartContainer__C9uOQ\"};","import { useWindowDimensions } from 'hooks/useWindowDimensions';\nimport { useSelector } from 'react-redux';\nimport {\n  BarChart,\n  Bar,\n  Cell,\n  LabelList,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n} from 'recharts';\nimport { selectCurrentReport } from 'redux/Transactions/selectors';\nimport css from './ChartReport.module.css';\n\nexport default function ChartReport({ dataArray }) {\n  const curReport = useSelector(selectCurrentReport);\n\n  const expensesDictionary = {\n    Продукты: 'Products',\n    Алкоголь: 'Alcohol',\n    Развлечения: 'Entertainment',\n    Здоровье: 'Health',\n    Транспорт: 'Transport',\n    'Всё для дома': 'Housing',\n    Техника: 'Technique',\n    'Коммуналка и связь': 'Communal, communication',\n    'Спорт и хобби': 'Sports, hobbies',\n    Образование: 'Education',\n    Прочее: 'Other',\n  };\n\n  const incomesDictionary = {\n    'З/П': 'Salary',\n    'Доп. доход': 'Add. income',\n  };\n\n  const thesaurus =\n    curReport === 'Expenses' ? expensesDictionary : incomesDictionary;\n\n  const data = dataArray.map(item => {\n    if (thesaurus[item.name]) {\n      return { ...item, name: thesaurus[item.name] };\n    }\n    return item;\n  });\n\n  const { width: screenWidth } = useWindowDimensions();\n\n  const renderCustomBarLabel = ({ x, y, width, value }) => {\n    if (screenWidth < 768) {\n      return (\n        <text\n          x={(window.innerWidth - 40) * 0.8}\n          y={y - 4}\n          fill=\"#666\"\n          dy={-10}\n          fontSize={10}\n        >{`${value} UAH`}</text>\n      );\n    }\n\n    return (\n      <text\n        x={x + width / 2}\n        y={y}\n        fill=\"#666\"\n        textAnchor=\"middle\"\n        dy={-10}\n        fontSize={10}\n      >{`${value}  UAH`}</text>\n    );\n  };\n\n  const RenderCategoryLabel = ({ x, y, value }) => {\n    if (screenWidth < 768) {\n      return (\n        <text\n          x={x}\n          y={y - 4}\n          dy={-10}\n          fontSize={10}\n          fill=\"#666\"\n          textAnchor=\"start\"\n        >\n          {value}\n        </text>\n      );\n    }\n  };\n\n  return (\n    <div className={css.rechartContainer}>\n      <BarChart\n        width={\n          window.screen.width < 768\n            ? window.screen.width - 40\n            : window.screen.width < 1280\n            ? 635\n            : 758\n        }\n        height={window.screen.width < 768 ? data.length * 50 : 422}\n        data={data}\n        margin={{ top: 20 }}\n        layout={window.screen.width < 768 ? 'vertical' : 'horizontal'}\n      >\n        {screenWidth < 768 ? (\n          <>\n            <XAxis axisLine={false} type=\"number\" hide />\n            <YAxis dataKey=\"name\" type=\"category\" hide />\n          </>\n        ) : (\n          <>\n            <YAxis axisLine={false} type=\"number\" hide tickCount={6} />\n            <XAxis dataKey=\"name\" type=\"category\" />\n            <CartesianGrid vertical={false} />\n          </>\n        )}\n        <Bar\n          domain={[0, 400]}\n          dataKey=\"total\"\n          barSize={window.screen.width < 768 ? 15 : 38}\n          radius={window.screen.width < 768 ? [0, 10, 10, 0] : [10, 10, 0, 0]}\n          label={renderCustomBarLabel}\n        >\n          <LabelList\n            dataKey=\"name\"\n            content={<RenderCategoryLabel />}\n            fill=\"#52555F\"\n          />\n          {data.map((entry, index) => (\n            <Cell\n              key={`cell-${index}`}\n              fill={index % 3 === 0 ? '#FF751D' : '#FFDAC0'}\n            />\n          ))}\n        </Bar>\n      </BarChart>\n    </div>\n  );\n}\n","import styled from '@emotion/styled';\n\nexport const IncomesContainer = styled.div`\n  padding: 0 40px;\n  @media screen and (min-width: 768px) {\n    padding: 0 218px;\n  }\n\n  @media screen and (min-width: 1000px) {\n    padding: 0 160px;\n  }\n`;\n\nexport const IncomesList = styled.ul`\n  margin-bottom: 20px;\n  display: flex;\n  gap: 20px;\n  justify-content: center;\n  position: relative;\n  @media screen and (min-width: 768px) {\n    margin-bottom: 0px;\n  }\n\n  @media screen and (min-width: 1280px) {\n  }\n`;\n\nexport const Notify = styled.p`\n  line-height: calc(14 / 12);\n  text-align: center;\n  letter-spacing: 0.02em;\n  text-transform: uppercase;\n  color: #52555f;\n`;\n","import styled from '@emotion/styled';\n\nexport const ExpensesItem = styled.li`\n  width: calc(100% / 3);\n  display: flex;\n  flex-direction: column-reverse;\n  cursor: pointer;\n  &:hover p:last-of-type,\n  &:focus p:last-of-type {\n    color: #ff751d;\n    font-weight: 700;\n  }\n  @media screen and (max-width: 767px) {\n    &:nth-of-type(3n + 1)::after {\n      content: '';\n      display: block;\n      width: 100%;\n      height: 1px;\n      position: absolute;\n      background-color: #e0e5eb;\n    }\n  }\n\n  @media screen and (min-width: 768px) {\n    width: calc(100% / 6);\n  }\n`;\n\nexport const Container = styled.div`\n  flex-grow: 1;\n  margin-bottom: 20px;\n  @media screen and (min-width: 768px) {\n    margin-bottom: 0px;\n  }\n`;\n\nexport const Total = styled.p`\n  margin-bottom: 5px;\n  line-height: calc(14 / 12);\n  text-transform: uppercase;\n  text-align: center;\n  color: #52555f;\n`;\n\nexport const Label = styled.p`\n  margin: 0 auto;\n  width: min-content;\n  flex-grow: 1;\n  margin-top: 5px;\n  font-size: 11px;\n  line-height: calc(14 / 12);\n  letter-spacing: 0.02em;\n  text-transform: uppercase;\n  text-align: center;\n  color: #52555f;\n  @media screen and (min-width: 768px) {\n    font-size: 12px;\n  }\n`;\n\nexport const Image = styled.img`\n  margin: 0 auto;\n`;\n","import PropTypes from 'prop-types';\nimport {\n  Container,\n  ExpensesItem,\n  Image,\n  Label,\n  Total,\n} from './ExpensesReportElement.styled';\n\nexport const ExpensesReportElement = ({\n  label,\n  total,\n  url,\n  handleClick,\n  name,\n  handleCurItem,\n  currentActive,\n  activeUrl,\n}) => {\n  const numberWithSpaces = num => {\n    return num.toFixed(2).replace(/\\B(?=(\\d{3})+(?!\\d))/g, ' ');\n  };\n\n  return (\n    <ExpensesItem\n      onClick={() => {\n        handleClick(name);\n        handleCurItem(label);\n      }}\n    >\n      <Container>\n        <Total>{numberWithSpaces(total)}</Total>\n\n        <Image src={currentActive === label ? activeUrl : url} alt={label} />\n        <Label>{label}</Label>\n      </Container>\n    </ExpensesItem>\n  );\n};\n\nExpensesReportElement.propTypes = {\n  label: PropTypes.string.isRequired,\n  total: PropTypes.number,\n  url: PropTypes.string.isRequired,\n  handleClick: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n  handleCurItem: PropTypes.func.isRequired,\n  currentActive: PropTypes.string.isRequired,\n  activeUrl: PropTypes.string.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const ExpensesList = styled.ul`\n  margin-bottom: 20px;\n  display: flex;\n  flex-wrap: wrap;\n  row-gap: 20px;\n  position: relative;\n  @media screen and (min-width: 768px) {\n    justify-content: center;\n    row-gap: 40px;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\nimport { useState } from 'react';\nimport { selectTransactionDataExpensesData } from 'redux/Transactions/selectors';\n\nimport imgProducts from '../../images/expensesReport/product.png';\nimport imgAlcohol from '../../images/expensesReport/alcohols.png';\nimport imgEntertainment from '../../images/expensesReport/entertainments.png';\nimport imgHealth from '../../images/expensesReport/healthe.png';\nimport imgTransport from '../../images/expensesReport/transports.png';\nimport imgHousing from '../../images/expensesReport/housings.png';\nimport imgTechnique from '../../images/expensesReport/techniques.png';\nimport imgCommunal from '../../images/expensesReport/communals.png';\nimport imgSports from '../../images/expensesReport/sports-hobbie.png';\nimport imgEducation from '../../images/expensesReport/educations.png';\nimport imgOther from '../../images/expensesReport/others.png';\n\nimport imgActiveProducts from '../../images/expensesReport/products-active.png';\nimport imgActiveAlcohol from '../../images/expensesReport/alcohol-active.png';\nimport imgActiveEntertainment from '../../images/expensesReport/entertainment-active.png';\nimport imgActiveHealth from '../../images/expensesReport/health-active.png';\nimport imgActiveTransport from '../../images/expensesReport/transport-active.png';\nimport imgActiveHousing from '../../images/expensesReport/housing-active.png';\nimport imgActiveTechnique from '../../images/expensesReport/technique-active.png';\nimport imgActiveCommunal from '../../images/expensesReport/communal-active.png';\nimport imgActiveSports from '../../images/expensesReport/sports-hobbies-active.png';\nimport imgActiveEducation from '../../images/expensesReport/education-active.png';\nimport imgActiveOther from '../../images/expensesReport/other-active.png';\nimport { Notify } from 'components/IncomesReport/IncomesReport.styled';\nimport { ExpensesReportElement } from 'components/ExpensesReportElement/ExpensesReportElement';\nimport { ExpensesList } from './ExpensesReport.styled';\n\nexport const ExpensesReport = ({\n  sortEntries,\n  setCurrentCategoryTransactions,\n}) => {\n  const expensesData = useSelector(selectTransactionDataExpensesData);\n\n  const [currentActive, setCurrentActive] = useState('');\n\n  const expensesDictionary = {\n    Продукты: {\n      label: 'Products',\n      img: imgProducts,\n      curImg: imgActiveProducts,\n    },\n    Алкоголь: { label: 'Alcohol', img: imgAlcohol, curImg: imgActiveAlcohol },\n    Развлечения: {\n      label: 'Entertainment',\n      img: imgEntertainment,\n      curImg: imgActiveEntertainment,\n    },\n    Здоровье: { label: 'Health', img: imgHealth, curImg: imgActiveHealth },\n    Транспорт: {\n      label: 'Transport',\n      img: imgTransport,\n      curImg: imgActiveTransport,\n    },\n    'Всё для дома': {\n      label: 'Housing',\n      img: imgHousing,\n      curImg: imgActiveHousing,\n    },\n    Техника: {\n      label: 'Technique',\n      img: imgTechnique,\n      curImg: imgActiveTechnique,\n    },\n    'Коммуналка и связь': {\n      label: 'Communal, communication',\n      img: imgCommunal,\n      curImg: imgActiveCommunal,\n    },\n    'Спорт и хобби': {\n      label: 'Sports, hobbies',\n      img: imgSports,\n      curImg: imgActiveSports,\n    },\n    Образование: {\n      label: 'Education',\n      img: imgEducation,\n      curImg: imgActiveEducation,\n    },\n    Прочее: { label: 'Other', img: imgOther, curImg: imgActiveOther },\n  };\n\n  const handleClick = categoryName => {\n    setCurrentCategoryTransactions(categoryName);\n  };\n\n  const handleCurItem = itemName => {\n    setCurrentActive(itemName);\n  };\n\n  return (\n    <div>\n      {Boolean(expensesData) && (\n        <div>\n          {sortEntries.length > 0 ? (\n            <ExpensesList>\n              {sortEntries.map(el => {\n                return (\n                  <ExpensesReportElement\n                    currentActive={currentActive}\n                    handleCurItem={handleCurItem}\n                    key={expensesDictionary[el.name].label}\n                    label={expensesDictionary[el.name].label}\n                    total={el.total}\n                    url={expensesDictionary[el.name].img}\n                    activeUrl={expensesDictionary[el.name].curImg}\n                    handleClick={handleClick}\n                    name={el.name}\n                  />\n                );\n              })}\n            </ExpensesList>\n          ) : (\n            <Notify>No data for this period</Notify>\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nExpensesReport.propTypes = {\n  sortEntries: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      total: PropTypes.number.isRequired,\n    })\n  ),\n  setCurrentCategoryTransactions: PropTypes.func.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const IncomesItem = styled.li`\n  width: calc((100% -20px) / 2);\n  display: flex;\n  flex-direction: column-reverse;\n  cursor: pointer;\n  @media screen and (max-width: 767px) {\n    &:nth-of-type(1)::after {\n      content: '';\n      display: block;\n      width: 100%;\n      height: 1px;\n      position: absolute;\n      background-color: #e0e5eb;\n    }\n  }\n`;\nexport const Label = styled.p`\n  margin: 0 auto;\n  width: 100%;\n  flex-grow: 1;\n  margin-top: 5px;\n  font-size: 11px;\n  line-height: calc(14 / 12);\n  letter-spacing: 0.02em;\n  text-transform: uppercase;\n  text-align: center;\n  color: #52555f;\n  @media screen and (min-width: 768px) {\n    font-size: 12px;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport {\n  Container,\n  Image,\n  Total,\n} from 'components/ExpensesReportElement/ExpensesReportElement.styled';\nimport { IncomesItem, Label } from './IncomesReportElement.styled';\n\nexport const IncomesReportElement = ({\n  label,\n  total,\n  url,\n  name,\n  handleClick,\n  handleCurItem,\n  currentActive,\n  activeUrl,\n}) => {\n  const numberWithSpaces = num => {\n    return num.toFixed(2).replace(/\\B(?=(\\d{3})+(?!\\d))/g, ' ');\n  };\n\n  return (\n    <IncomesItem\n      onClick={() => {\n        handleClick(name);\n        handleCurItem(label);\n      }}\n    >\n      <Container>\n        <Total>{numberWithSpaces(total)}</Total>\n\n        <Image src={currentActive === label ? activeUrl : url} alt={label} />\n       \n        <Label>{label}</Label>\n      </Container>\n    </IncomesItem>\n  );\n};\n\nIncomesReportElement.propTypes = {\n  label: PropTypes.string.isRequired,\n  total: PropTypes.number,\n  url: PropTypes.string.isRequired,\n  handleClick: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n  handleCurItem: PropTypes.func.isRequired,\n  currentActive: PropTypes.string.isRequired,\n  activeUrl: PropTypes.string.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\nimport { selectTransactionDataIncomesData } from 'redux/Transactions/selectors';\nimport { useState } from 'react';\n\nimport imgSalary from '../../images/incomesReport/salarys.png';\nimport imgAddincome from '../../images/incomesReport/add-incomes.png';\nimport imgActiveSalary from '../../images/incomesReport/salary-actives.png';\nimport imgActiveAddincome from '../../images/incomesReport/add-income-actives.png';\nimport { IncomesReportElement } from 'components/IncomesReportElement/IncomesReportElement';\nimport { IncomesContainer, IncomesList, Notify } from './IncomesReport.styled';\n\nexport const IncomesReport = ({\n  sortEntries,\n  setCurrentCategoryTransactions,\n}) => {\n  const [currentActive, setCurrentActive] = useState('');\n\n  const incomesData = useSelector(selectTransactionDataIncomesData);\n\n  const incomesDictionary = {\n    'З/П': { label: 'Salary', img: imgSalary, curImg: imgActiveSalary },\n    'Доп. доход': {\n      label: 'Add. income',\n      img: imgAddincome,\n      curImg: imgActiveAddincome,\n    },\n  };\n\n  const handleClick = categoryName => {\n    setCurrentCategoryTransactions(categoryName);\n  };\n\n  const handleCurItem = itemName => {\n    setCurrentActive(itemName);\n  };\n\n  return (\n    <IncomesContainer>\n      {Boolean(incomesData) && (\n        <div>\n          {sortEntries.length > 0 ? (\n            <IncomesList>\n              {sortEntries.map(el => {\n                return (\n                  <IncomesReportElement\n                    currentActive={currentActive}\n                    handleCurItem={handleCurItem}\n                    key={incomesDictionary[el.name].label}\n                    label={incomesDictionary[el.name].label}\n                    total={el.total}\n                    url={incomesDictionary[el.name].img}\n                    activeUrl={incomesDictionary[el.name].curImg}\n                    name={el.name}\n                    handleClick={handleClick}\n                  />\n                );\n              })}\n            </IncomesList>\n          ) : (\n            <Notify>No data for this period</Notify>\n          )}\n        </div>\n      )}\n    </IncomesContainer>\n  );\n};\n\nIncomesReport.propTypes = {\n  sortEntries: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      total: PropTypes.number.isRequired,\n    })\n  ),\n  setCurrentCategoryTransactions: PropTypes.func.isRequired,\n};\n","import styled from '@emotion/styled';\nimport { GrFormNext, GrFormPrevious } from 'react-icons/gr';\n\nexport const ReportContainer = styled.div`\n  @media screen and (min-width: 768px) {\n    margin-bottom: 32px;\n    padding: 20px 40px;\n    box-shadow: 0px 10px 60px rgba(170, 178, 197, 0.2);\n    border-radius: 30px;\n    background-color: #ffffff;\n    overflow: hidden;\n  }\n\n  @media screen and (min-width: 1000px) {\n    margin-bottom: 40px;\n    padding: 20px 205px;\n  }\n`;\n\nexport const ReportType = styled.div`\n  background-color: #ffffff;\n  display: flex;\n  justify-content: center;\n  margin-bottom: 20px;\n`;\n\nexport const ReportName = styled.p`\n  margin: 0 16px;\n  font-weight: 700;\n  font-size: 14px;\n  line-height: calc(16/14);\n  text-align: center;\n  letter-spacing: 0.02em;\n  text-transform: uppercase;\n  color: #000000;\n`;\n\nexport const BtnReport = styled.button`\n  background-color: transparent;\n`;\n\nexport const GrFormPreviousStyled = styled(GrFormPrevious)`\n  & polyline {\n    stroke: #ff751d;\n    stroke-width: 3;\n  }\n`;\nexport const GrFormNextStyled = styled(GrFormNext)`\n  & polyline {\n    display: block;\n    stroke: #ff751d;\n    stroke-width: 3;\n    width: 4px;\n    height: 10px;\n  }\n`;\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport ChartReport from 'components/ChartReport/ChartReport';\nimport { ExpensesReport } from 'components/ExpensesReport/ExpensesReport';\nimport { IncomesReport } from 'components/IncomesReport/IncomesReport';\nimport {\n  selectCurrentReport,\n  selectTransactionDataExpensesData,\n  selectTransactionDataIncomesData,\n  getIsloading,\n} from 'redux/Transactions/selectors';\nimport { Loader } from 'components/Loader/Loader';\nimport { changeReportType } from 'redux/Transactions/TransactionsSlice';\nimport {\n  BtnReport,\n  GrFormNextStyled,\n  GrFormPreviousStyled,\n  ReportContainer,\n  ReportName,\n  ReportType,\n} from './ReportByCategories.styled';\n\nexport const ReportByCategories = () => {\n  const [transactions, setTransactions] = useState({});\n  const curReport = useSelector(selectCurrentReport);\n  const dispatch = useDispatch();\n  const isLoading = useSelector(getIsloading);\n\n  const toggleReportType = () => {\n    dispatch(changeReportType(curReport));\n    setTransactions({});\n  };\n\n  const expensesData = useSelector(selectTransactionDataExpensesData);\n  const incomeData = useSelector(selectTransactionDataIncomesData);\n\n  const entries = Object.entries(\n    curReport === 'Expenses' ? expensesData ?? {} : incomeData ?? {}\n  );\n\n  const sortEntries = [...entries]\n    .sort((firstEl, secondEl) => {\n      return secondEl[1].total - firstEl[1].total;\n    })\n    .map(el => {\n      return { name: el[0], total: el[1].total };\n    });\n\n  const setCurrentCategoryTransactions = name => {\n    curReport === 'Expenses'\n      ? setTransactions(expensesData[name])\n      : setTransactions(incomeData[name]);\n  };\n\n  const sortedCategoryTransactions = Object.entries(transactions)\n    .filter(([key]) => key !== 'total')\n    .map(([key, value]) => ({ name: key, total: value }))\n    .sort((firstEl, secondEl) => secondEl.total - firstEl.total);\n\n  return (\n    <>\n      <ReportContainer>\n        {isLoading && <Loader />}\n        <ReportType>\n          <BtnReport onClick={toggleReportType}>\n            <GrFormPreviousStyled />\n          </BtnReport>\n          <ReportName>{curReport}</ReportName>\n          <BtnReport onClick={toggleReportType}>\n            <GrFormNextStyled />\n          </BtnReport>\n        </ReportType>\n\n        {curReport === 'Expenses' ? (\n          <ExpensesReport\n            sortEntries={sortEntries}\n            setCurrentCategoryTransactions={setCurrentCategoryTransactions}\n            sortedCategoryTransactions={sortedCategoryTransactions}\n          />\n        ) : (\n          <IncomesReport\n            sortEntries={sortEntries}\n            setCurrentCategoryTransactions={setCurrentCategoryTransactions}\n            sortedCategoryTransactions={sortedCategoryTransactions}\n          />\n        )}\n      </ReportContainer>\n\n      {sortEntries.length ? (\n        <ChartReport\n          dataArray={\n            sortedCategoryTransactions.length\n              ? sortedCategoryTransactions\n              : sortEntries\n          }\n        />\n      ) : null}\n    </>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  position: relative;\n  height: 85px;\n  margin-bottom: 32px;\n  padding: 20px 10px 25px 10px;\n  display: flex;\n  justify-content: center;\n  box-shadow: 5px 10px 20px rgba(170, 178, 197, 0.4);\n  border-radius: 20px;\n  background-color: #ffffff;\n  @media screen and (min-width: 768px) {\n    height: 50px;\n    padding: 15px 134px;\n  }\n  @media screen and (min-width: 1280px) {\n    padding: 15px 299px;\n  }\n`;\n\nexport const TotalData = styled.div`\n  width: calc((100%-1px) / 2);\n  align-items: center;\n  text-align: center;\n  &:last-child::before {\n    content: '';\n    display: block;\n    width: 1px;\n    height: 70px;\n    position: absolute;\n    top: 8px;\n    background-color: #e0e5eb;\n  }\n  @media screen and (min-width: 768px) {\n    display: flex;\n    justify-content: flex-start;\n    &:first-of-type {\n      justify-content: flex-end;\n      margin-right: 20px;\n    }\n    &:last-child::before {\n      height: 36px;\n    }\n  }\n`;\n\nexport const Type = styled.p`\n  margin-bottom: 4px;\n  font-weight: 700;\n  font-size: 16px;\n  line-height: calc(16 / 14);\n  color: #52555f;\n  @media screen and (min-width: 768px) {\n    margin-bottom: 0px;\n    margin-right: 15px;\n    &:first-of-type {\n      margin-left: 20px;\n    }\n  }\n`;\n\nexport const Total = styled.p`\n  font-weight: 700;\n  font-size: 14px;\n  line-height: calc(16 / 14);\n  color: ${({ typeReport }) =>\n    typeReport === 'Expenses' ? '#E53935' : '#407946'};\n`;\n","import { useSelector } from 'react-redux';\nimport {\n  selectTransactionDataExpenses,\n  selectTransactionDataIncomes,\n} from 'redux/Transactions/selectors';\nimport {\n  Container,\n  Total,\n  TotalData,\n  Type,\n} from './TotalTransactionsData.styled';\n\nexport const TotalTransactionsData = () => {\n  const dataIncomes = useSelector(selectTransactionDataIncomes);\n  const dataExpenses = useSelector(selectTransactionDataExpenses);\n\n  return (\n    <Container>\n      <TotalData>\n        <Type>Expenses:</Type>\n        <Total typeReport={'Expenses'}>\n          {dataExpenses ? `- ${dataExpenses.expenseTotal}` : '0'}\n        </Total>\n      </TotalData>\n\n      <TotalData>\n        <Type>Income:</Type>\n        <Total typeReport={'Income'}>\n          {dataIncomes ? `+ ${dataIncomes.incomeTotal}` : '0'}\n        </Total>\n      </TotalData>\n    </Container>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const MainContainer = styled.div`\n  width: 100%;\n  background-color: #f5f6fb;\n  border-bottom-left-radius: 30%;\n  height: 286px;\n  padding: 16px 20px 52px 20px;\n  @media screen and (min-width: 768px) {\n    padding: 40px 32px 80px 32px;\n    border-bottom-left-radius: 10%;\n    height: 527px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    padding: 40px 123px 80px 123px;\n  }\n`;\n","import { ReportByCategories } from 'components/ReportByCategories/ReportByCategories';\nimport { TotalTransactionsData } from 'components/TotalTransactionsData/TotalTransactionsData';\nimport { MainContainer } from './ReportsPage.styled';\nimport { Loader } from 'components/Loader/Loader';\nimport { useSelector } from 'react-redux';\nimport { selectIsRefreshing } from 'redux/user/selectors';\nimport { Balance } from 'components/Balance/Balance';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { useEffect } from 'react';\n\nconst ReportsPage = () => {\n  const location = useLocation();\n\n  const path =\n    location.pathname === '/'\n      ? `/transaction/period-data${location.search}`\n      : location.pathname;\n\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    navigate(path || '/transaction/period-data');\n  }, [navigate, path]);\n\n  const isRefreshing = useSelector(selectIsRefreshing);\n\n  return isRefreshing ? (\n    <Loader />\n  ) : (\n    <MainContainer>\n      <Balance />\n      <TotalTransactionsData />\n      <ReportByCategories />\n    </MainContainer>\n  );\n};\n\nexport default ReportsPage;\n"],"names":["useWindowDimensions","isInBrowserEnvironment","window","useState","width","innerWidth","height","innerHeight","windowSize","setWindowSize","useEffect","handleResize","addEventListener","removeEventListener","ChartReport","dataArray","thesaurus","useSelector","selectCurrentReport","Продукты","Алкоголь","Развлечения","Здоровье","Транспорт","Техника","Образование","Прочее","data","map","item","name","screenWidth","RenderCategoryLabel","x","y","value","dy","fontSize","fill","textAnchor","className","css","BarChart","screen","length","margin","top","layout","XAxis","axisLine","type","hide","YAxis","dataKey","tickCount","CartesianGrid","vertical","Bar","domain","barSize","radius","label","LabelList","content","entry","index","Cell","IncomesContainer","styled","IncomesList","Notify","ExpensesItem","Container","Total","Label","Image","ExpensesReportElement","num","total","url","handleClick","handleCurItem","currentActive","activeUrl","onClick","toFixed","replace","src","alt","ExpensesList","ExpensesReport","sortEntries","setCurrentCategoryTransactions","expensesData","selectTransactionDataExpensesData","setCurrentActive","expensesDictionary","img","imgProducts","curImg","imgActiveProducts","imgAlcohol","imgActiveAlcohol","imgEntertainment","imgActiveEntertainment","imgHealth","imgActiveHealth","imgTransport","imgActiveTransport","imgHousing","imgActiveHousing","imgTechnique","imgActiveTechnique","imgCommunal","imgActiveCommunal","imgSports","imgActiveSports","imgEducation","imgActiveEducation","imgOther","imgActiveOther","categoryName","itemName","Boolean","el","IncomesItem","IncomesReportElement","IncomesReport","incomesData","selectTransactionDataIncomesData","incomesDictionary","imgSalary","imgActiveSalary","imgAddincome","imgActiveAddincome","ReportContainer","ReportType","ReportName","BtnReport","GrFormPreviousStyled","GrFormPrevious","GrFormNextStyled","GrFormNext","ReportByCategories","transactions","setTransactions","curReport","dispatch","useDispatch","isLoading","getIsloading","toggleReportType","changeReportType","incomeData","entries","Object","sort","firstEl","secondEl","sortedCategoryTransactions","filter","Loader","TotalData","Type","typeReport","TotalTransactionsData","dataIncomes","selectTransactionDataIncomes","dataExpenses","selectTransactionDataExpenses","expenseTotal","incomeTotal","MainContainer","location","useLocation","path","pathname","search","navigate","useNavigate","selectIsRefreshing","Balance"],"sourceRoot":""}